{"name":"Yertle","tagline":"An example of an asynchronous architecture for data collection, analysis and presentation","body":"# Yertle (with lib-stats)\r\n\r\nAn example of an asynchronous architecture for data collection, analysis and presentation. Consists of separate layers for data collection, analysis, and presentation. Think sorta Model-View-Controller (MVC). \r\n\r\nYertle leverages existing, readily available and well-tested technologies, including: \r\n * **RabbitMQ** w/ **Celery** for the asychronous components\r\n * **cron** for task scheduling\r\n * **Python** w/ **pandas** for data collection and analysis\r\n * **Mongodb** (and text flat files) for datastore and persistence\r\n * **Flask** for the web framework\r\n * **nginx** and **uWSGI** for depoyment\r\n * **d3.js** w/ XHR for visualizations in the front-end. \r\n\r\n## You might find Yertle useful if\r\n\r\nYou might find Yertle useful if you want to learn about or starting a project that involves: \r\n\r\n * Periodically collecting data from external sources, like with APIs. \r\n * Workflows involving long-running tasks or any task that must be performed asynchronously.\r\n * Output that is rendered and displayed on the web\r\n * etc. \r\n\r\n## How to use Yertle \r\n\r\nThink of this project as a demonstration and example of how to combine these technologies. It can be readily adapted to address many common use-cases. \r\n\r\n * Use the project to understand how to architect a system that meets your needs. \r\n * Use the documentation to implement exactly the components you need. \r\n * Use the code as a working example and template to start from. \r\n\r\n## Working example\r\n\r\nAs a working example, I have implemented **\"lib-stats\"** which collects and displays information about open source python data analysis libraries. \r\n\r\n * Uses the Github API to fetch and store information about certain libraries\r\n * Data is collected, asynchronously, once a day.\r\n * The results are stored in flat files or in mongodb\r\n * The stored information is used to render a simple visualization on the web using d3.js\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}